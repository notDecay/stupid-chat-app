{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal.mjs","../../src/utils/utils.js","../../src/utils/logdown.js","../../src/page/ChatMessageInput.svelte","../../src/page/MessageEdit.svelte","../../src/page/Message.svelte","../../src/page/MessageFollowUp.svelte","../../src/page/messageUtils.js","../../src/page/MarkdownParser.js","../../src/page/ChatPage.svelte","../../src/main.js"],"sourcesContent":["function noop() {}\n\nconst identity = x => x;\n\nfunction assign(tar, src) {\n\tfor (const k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction is_promise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction run(fn) {\n\treturn fn();\n}\n\nfunction blank_object() {\n\treturn Object.create(null);\n}\n\nfunction run_all(fns) {\n\tfns.forEach(run);\n}\n\nfunction is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nfunction safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction validate_store(store, name) {\n\tif (!store || typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nfunction subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(store.subscribe(callback));\n}\n\nfunction create_slot(definition, ctx, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, fn) {\n\treturn definition[1]\n\t\t? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n\t\t: ctx.$$scope.ctx;\n}\n\nfunction get_slot_changes(definition, ctx, changed, fn) {\n\treturn definition[1]\n\t\t? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n\t\t: ctx.$$scope.changed || {};\n}\n\nfunction exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\nconst tasks = new Set();\nlet running = false;\n\nfunction run_tasks() {\n\ttasks.forEach(task => {\n\t\tif (!task[0](window.performance.now())) {\n\t\t\ttasks.delete(task);\n\t\t\ttask[1]();\n\t\t}\n\t});\n\n\trunning = tasks.size > 0;\n\tif (running) requestAnimationFrame(run_tasks);\n}\n\nfunction clear_loops() {\n\t// for testing...\n\ttasks.forEach(task => tasks.delete(task));\n\trunning = false;\n}\n\nfunction loop(fn) {\n\tlet task;\n\n\tif (!running) {\n\t\trunning = true;\n\t\trequestAnimationFrame(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise(fulfil => {\n\t\t\ttasks.add(task = [fn, fulfil]);\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor);\n}\n\nfunction detach(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detach_between(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detach_before(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detach_after(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\nfunction element(name) {\n\treturn document.createElement(name);\n}\n\nfunction svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction text(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction space() {\n\treturn text(' ');\n}\n\nfunction empty() {\n\treturn text('');\n}\n\nfunction listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\nfunction prevent_default(fn) {\n\treturn function(event) {\n\t\tevent.preventDefault();\n\t\treturn fn.call(this, event);\n\t};\n}\n\nfunction stop_propagation(fn) {\n\treturn function(event) {\n\t\tevent.stopPropagation();\n\t\treturn fn.call(this, event);\n\t};\n}\n\nfunction attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse node.setAttribute(attribute, value);\n}\n\nfunction set_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tif (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\nfunction xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction get_binding_group_value(group) {\n\tconst value = [];\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction to_number(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children(element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claim_element(nodes, name, attributes, svg) {\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (let j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? svg_element(name) : element(name);\n}\n\nfunction claim_text(nodes, data) {\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn text(data);\n}\n\nfunction set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data !== data) text.data = data;\n}\n\nfunction set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\nfunction set_style(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction select_option(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction select_value(select) {\n\tconst selected_option = select.querySelector(':checked') || select.options[0];\n\treturn selected_option && selected_option.__value;\n}\n\nfunction select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n\nfunction add_resize_listener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction toggle_class(element, name, toggle) {\n\telement.classList[toggle ? 'add' : 'remove'](name);\n}\n\nfunction custom_event(type, detail) {\n\tconst e = document.createEvent('CustomEvent');\n\te.initCustomEvent(type, false, false, detail);\n\treturn e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\n\tif (!current_rules[name]) {\n\t\tif (!stylesheet) {\n\t\t\tconst style = element('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\tstylesheet = style.sheet;\n\t\t}\n\n\t\tcurrent_rules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n\n\tactive += 1;\n\treturn name;\n}\n\nfunction delete_rule(node, name) {\n\tnode.style.animation = (node.style.animation || '')\n\t\t.split(', ')\n\t\t.filter(name\n\t\t\t? anim => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t\t)\n\t\t.join(', ');\n\n\tif (name && !--active) clear_rules();\n}\n\nfunction clear_rules() {\n\trequestAnimationFrame(() => {\n\t\tif (active) return;\n\t\tlet i = stylesheet.cssRules.length;\n\t\twhile (i--) stylesheet.deleteRule(i);\n\t\tcurrent_rules = {};\n\t});\n}\n\nfunction create_animation(node, from, fn, params) {\n\tif (!from) return noop;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return noop;\n\n\tconst {\n\t\tdelay = 0,\n\t\tduration = 300,\n\t\teasing = identity,\n\t\tstart: start_time = window.performance.now() + delay,\n\t\tend = start_time + duration,\n\t\ttick = noop,\n\t\tcss\n\t} = fn(node, { from, to }, params);\n\n\tlet running = true;\n\tlet started = false;\n\tlet name;\n\n\tconst css_text = node.style.cssText;\n\n\tfunction start() {\n\t\tif (css) {\n\t\t\tif (delay) node.style.cssText = css_text; // TODO create delayed animation instead?\n\t\t\tname = create_rule(node, 0, 1, duration, 0, easing, css);\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\tfunction stop() {\n\t\tif (css) delete_rule(node, name);\n\t\trunning = false;\n\t}\n\n\tloop(now => {\n\t\tif (!started && now >= start_time) {\n\t\t\tstart();\n\t\t}\n\n\t\tif (started && now >= end) {\n\t\t\ttick(1, 0);\n\t\t\tstop();\n\t\t}\n\n\t\tif (!running) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (started) {\n\t\t\tconst p = now - start_time;\n\t\t\tconst t = 0 + 1 * easing(p / duration);\n\t\t\ttick(t, 1 - t);\n\t\t}\n\n\t\treturn true;\n\t});\n\n\tif (delay) {\n\t\tif (css) node.style.cssText += css(0, 1);\n\t} else {\n\t\tstart();\n\t}\n\n\ttick(0, 1);\n\n\treturn stop;\n}\n\nfunction fix_position(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nlet current_component;\n\nfunction set_current_component(component) {\n\tcurrent_component = component;\n}\n\nfunction get_current_component() {\n\tif (!current_component) throw new Error(`Function called outside component initialization`);\n\treturn current_component;\n}\n\nfunction beforeUpdate(fn) {\n\tget_current_component().$$.before_render.push(fn);\n}\n\nfunction onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\nfunction afterUpdate(fn) {\n\tget_current_component().$$.after_render.push(fn);\n}\n\nfunction onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\nfunction createEventDispatcher() {\n\tconst component = current_component;\n\n\treturn (type, detail) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(type, detail);\n\t\t\tcallbacks.slice().forEach(fn => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n}\n\nfunction getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\n\tif (callbacks) {\n\t\tcallbacks.slice().forEach(fn => fn(event));\n\t}\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\n\nlet update_promise;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\n\nfunction schedule_update() {\n\tif (!update_promise) {\n\t\tupdate_promise = Promise.resolve();\n\t\tupdate_promise.then(flush);\n\t}\n}\n\nfunction tick() {\n\tschedule_update();\n\treturn update_promise;\n}\n\nfunction add_binding_callback(fn) {\n\tbinding_callbacks.push(fn);\n}\n\nfunction add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\nfunction add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\nfunction flush() {\n\tconst seen_callbacks = new Set();\n\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\twhile (dirty_components.length) {\n\t\t\tconst component = dirty_components.shift();\n\t\t\tset_current_component(component);\n\t\t\tupdate(component.$$);\n\t\t}\n\n\t\twhile (binding_callbacks.length) binding_callbacks.shift()();\n\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\twhile (render_callbacks.length) {\n\t\t\tconst callback = render_callbacks.pop();\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\tcallback();\n\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t}\n\t\t}\n\t} while (dirty_components.length);\n\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\n\tupdate_promise = null;\n}\n\nfunction update($$) {\n\tif ($$.fragment) {\n\t\t$$.update($$.dirty);\n\t\trun_all($$.before_render);\n\t\t$$.fragment.p($$.dirty, $$.ctx);\n\t\t$$.dirty = null;\n\n\t\t$$.after_render.forEach(add_render_callback);\n\t}\n}\n\nlet promise;\n\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\n\treturn promise;\n}\n\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nlet outros;\n\nfunction group_outros() {\n\toutros = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nfunction check_outros() {\n\tif (!outros.remaining) {\n\t\trun_all(outros.callbacks);\n\t}\n}\n\nfunction on_outro(callback) {\n\toutros.callbacks.push(callback);\n}\n\nfunction create_in_transition(node, fn, params) {\n\tlet config = fn(node, params);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick$$1(0, 1);\n\n\t\tconst start_time = window.performance.now() + delay;\n\t\tconst end_time = start_time + duration;\n\n\t\tif (task) task.abort();\n\t\trunning = true;\n\n\t\ttask = loop(now => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick$$1(1, 0);\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn running = false;\n\t\t\t\t}\n\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick$$1(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tlet started = false;\n\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\n\t\t\tdelete_rule(node);\n\n\t\t\tif (typeof config === 'function') {\n\t\t\t\tconfig = config();\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_out_transition(node, fn, params) {\n\tlet config = fn(node, params);\n\tlet running = true;\n\tlet animation_name;\n\n\tconst group = outros;\n\n\tgroup.remaining += 1;\n\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = window.performance.now() + delay;\n\t\tconst end_time = start_time + duration;\n\n\t\tloop(now => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick$$1(0, 1);\n\n\t\t\t\t\tif (!--group.remaining) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.callbacks);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick$$1(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (typeof config === 'function') {\n\t\twait().then(() => {\n\t\t\tconfig = config();\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_bidirectional_transition(node, fn, params, intro) {\n\tlet config = fn(node, params);\n\n\tlet t = intro ? 0 : 1;\n\n\tlet running_program = null;\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\tfunction init(program, duration) {\n\t\tconst d = program.b - t;\n\t\tduration *= Math.abs(d);\n\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tconst program = {\n\t\t\tstart: window.performance.now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\tprogram.group = outros;\n\t\t\toutros.remaining += 1;\n\t\t}\n\n\t\tif (running_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\n\t\t\tif (b) tick$$1(0, 1);\n\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\n\t\t\tloop(now => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick$$1(t = running_program.b, 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.remaining) run_all(running_program.group.callbacks);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick$$1(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\trun(b) {\n\t\t\tif (typeof config === 'function') {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconfig = config();\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\nfunction handle_promise(promise, info) {\n\tconst token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ton_outro(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tblock.o(1);\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tif (block.i) block.i(1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\n\t\t\tflush();\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (is_promise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\nfunction outro_and_destroy_block(block, lookup) {\n\ton_outro(() => {\n\t\tdestroy_block(block, lookup);\n\t});\n\n\tblock.o(1);\n}\n\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_lookup.set(key, new_blocks[i] = block);\n\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\n\tfunction insert(block) {\n\t\tif (block.i) block.i(1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move.has(old_key)) {\n\t\t\to--;\n\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction get_spread_update(levels, updates) {\n\tconst update = {};\n\n\tconst to_null_out = {};\n\tconst accounted_for = {};\n\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalid_attribute_name_character.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(items[i], i);\n\t}\n\treturn str;\n}\n\nconst missing_component = {\n\t$$render: () => ''\n};\n\nfunction validate_component(component, name) {\n\tif (!component || !component.$$render) {\n\t\tif (name === 'svelte:component') name += ' this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction debug(file, line, column, values) {\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n\tconsole.log(values); // eslint-disable-line no-console\n\treturn '';\n}\n\nlet on_destroy;\n\nfunction create_ssr_component(fn) {\n\tfunction $$render(result, props, bindings, slots) {\n\t\tconst parent_component = current_component;\n\n\t\tconst $$ = {\n\t\t\ton_destroy,\n\t\t\tcontext: new Map(parent_component ? parent_component.$$.context : []),\n\n\t\t\t// these will be immediately discarded\n\t\t\ton_mount: [],\n\t\t\tbefore_render: [],\n\t\t\tafter_render: [],\n\t\t\tcallbacks: blank_object()\n\t\t};\n\n\t\tset_current_component({ $$ });\n\n\t\tconst html = fn(result, props, bindings, slots);\n\n\t\tset_current_component(parent_component);\n\t\treturn html;\n\t}\n\n\treturn {\n\t\trender: (props = {}, options = {}) => {\n\t\t\ton_destroy = [];\n\n\t\t\tconst result = { head: '', css: new Set() };\n\t\t\tconst html = $$render(result, props, {}, options);\n\n\t\t\trun_all(on_destroy);\n\n\t\t\treturn {\n\t\t\t\thtml,\n\t\t\t\tcss: {\n\t\t\t\t\tcode: Array.from(result.css).map(css => css.code).join('\\n'),\n\t\t\t\t\tmap: null // TODO\n\t\t\t\t},\n\t\t\t\thead: result.head\n\t\t\t};\n\t\t},\n\n\t\t$$render\n\t};\n}\n\nfunction get_store_value(store) {\n\tlet value;\n\tstore.subscribe(_ => value = _)();\n\treturn value;\n}\n\nfunction bind(component, name, callback) {\n\tif (component.$$.props.indexOf(name) === -1) return;\n\tcomponent.$$.bound[name] = callback;\n\tcallback(component.$$.ctx[name]);\n}\n\nfunction mount_component(component, target, anchor) {\n\tconst { fragment, on_mount, on_destroy, after_render } = component.$$;\n\n\tfragment.m(target, anchor);\n\n\t// onMount happens after the initial afterUpdate. Because\n\t// afterUpdate callbacks happen in reverse order (inner first)\n\t// we schedule onMount callbacks before afterUpdate callbacks\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = on_mount.map(run).filter(is_function);\n\t\tif (on_destroy) {\n\t\t\ton_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\n\tafter_render.forEach(add_render_callback);\n}\n\nfunction destroy(component, detaching) {\n\tif (component.$$) {\n\t\trun_all(component.$$.on_destroy);\n\t\tcomponent.$$.fragment.d(detaching);\n\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\tcomponent.$$.on_destroy = component.$$.fragment = null;\n\t\tcomponent.$$.ctx = {};\n\t}\n}\n\nfunction make_dirty(component, key) {\n\tif (!component.$$.dirty) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty = {};\n\t}\n\tcomponent.$$.dirty[key] = true;\n}\n\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\n\tconst props = options.props || {};\n\n\tconst $$ = component.$$ = {\n\t\tfragment: null,\n\t\tctx: null,\n\n\t\t// state\n\t\tprops: prop_names,\n\t\tupdate: noop,\n\t\tnot_equal: not_equal$$1,\n\t\tbound: blank_object(),\n\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\tbefore_render: [],\n\t\tafter_render: [],\n\t\tcontext: new Map(parent_component ? parent_component.$$.context : []),\n\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty: null\n\t};\n\n\tlet ready = false;\n\n\t$$.ctx = instance\n\t\t? instance(component, props, (key, value) => {\n\t\t\tif ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n\t\t\t\tif ($$.bound[key]) $$.bound[key](value);\n\t\t\t\tif (ready) make_dirty(component, key);\n\t\t\t}\n\t\t})\n\t\t: props;\n\n\t$$.update();\n\tready = true;\n\trun_all($$.before_render);\n\t$$.fragment = create_fragment($$.ctx);\n\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\t$$.fragment.l(children(options.target));\n\t\t} else {\n\t\t\t$$.fragment.c();\n\t\t}\n\n\t\tif (options.intro && component.$$.fragment.i) component.$$.fragment.i();\n\t\tmount_component(component, options.target, options.anchor);\n\t\tflush();\n\t}\n\n\tset_current_component(parent_component);\n}\n\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n\tSvelteElement = class extends HTMLElement {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t}\n\n\t\tconnectedCallback() {\n\t\t\tfor (const key in this.$$.slotted) {\n\t\t\t\tthis.appendChild(this.$$.slotted[key]);\n\t\t\t}\n\t\t}\n\n\t\tattributeChangedCallback(attr$$1, oldValue, newValue) {\n\t\t\tthis[attr$$1] = newValue;\n\t\t}\n\n\t\t$destroy() {\n\t\t\tdestroy(this, true);\n\t\t\tthis.$destroy = noop;\n\t\t}\n\n\t\t$on(type, callback) {\n\t\t\t// TODO should this delegate to addEventListener?\n\t\t\tconst callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n\t\t\tcallbacks.push(callback);\n\n\t\t\treturn () => {\n\t\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t\t};\n\t\t}\n\n\t\t$set() {\n\t\t\t// overridden by instance, if it has props\n\t\t}\n\t};\n}\n\nclass SvelteComponent {\n\t$destroy() {\n\t\tdestroy(this, true);\n\t\tthis.$destroy = noop;\n\t}\n\n\t$on(type, callback) {\n\t\tconst callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n\t\tcallbacks.push(callback);\n\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t$set() {\n\t\t// overridden by instance, if it has props\n\t}\n}\n\nclass SvelteComponentDev extends SvelteComponent {\n\tconstructor(options) {\n\t\tif (!options || (!options.target && !options.$$inline)) {\n\t\t\tthrow new Error(`'target' is a required option`);\n\t\t}\n\n\t\tsuper();\n\t}\n\n\t$destroy() {\n\t\tsuper.$destroy();\n\t\tthis.$destroy = () => {\n\t\t\tconsole.warn(`Component was already destroyed`); // eslint-disable-line no-console\n\t\t};\n\t}\n}\n\nexport { create_animation, fix_position, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","/**\n * @param {string} html \n * @returns \n */\nexport function render(html) {\n  const dom = new DOMParser().parseFromString(html, 'text/html').body\n  console.log('root element count:', dom.children.length);\n  if (dom.children.length > 1) {\n    throw new Error(`HTML tree should has 1 root element, recieved ${dom.children.length} root element`)\n  }\n  const rootElement = dom.children[0]\n  const attr = {}\n  for (let i = 0, atts = rootElement.attributes, totalAttribute = atts.length; i < totalAttribute; i++){\n    // attr\n    attr[atts[i].nodeName] = atts[i].nodeValue\n  }\n\n  const element = u(`<${rootElement.tagName}>`).attr(attr).html(rootElement.innerHTML)\n  return {\n    /**@param {string | Element} selector */\n    to (selector) {\n      u(selector).append(element)\n    }\n  }\n}\n\nexport function makeid(length = 5) {\n  let result = ''\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  let counter = 0\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * characters.length))\n    counter += 1\n  }\n  return result\n}\n\n/**\n * \n * @param {string} str \n * @returns \n */\nexport function convertNewLinesToBreakSpaces(str) {\n  return str.replaceAll('\\n', '<br>')\n}\n\nexport function convertBreakSpacesToNewLines(str) {\n  return str.replaceAll('<br>', '\\n')\n}\n\nexport function sleep(ms = 5) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}","const labelStyle = (bgColor) => `background: ${bgColor}; border-radius: 4px; font-weight: bold; color:white`\r\n\r\n/**Logging some stuff into the console BUTTTT better :)\r\n * \r\n * @param {'log' | 'warn' | 'error' | 'trace'} type the type of log\r\n * @param {string} labelColor the color of the label, accept `#hex`, `rgb`, `hsl`\r\n * @param {string} label \r\n * @param {any} content \r\n * @param {any[]} stuff \r\n */\r\nfunction log(type, labelColor, label, content, ...stuff) {\r\n  console[type](`%c ${label} %c ${content}`, labelStyle(labelColor), '', ...stuff)\r\n}\r\n\r\nconst INFO_COLOR = '#35c4b6'\r\nconst ERR_COLOR = '#c44835'\r\nconst WARN_COLOR = '#a1912a'\r\n/**### class `logdown`\r\n * Extending and adding some utils function to make the good old friend `console.log()` way more better hehe.\r\n */\r\nclass logdown {\r\n  static success(stuff, ...otherThings) {\r\n    log('log', '#35c452', 'success', stuff, ...otherThings)\r\n  } \r\n  static warn(stuff, ...otherThings) {\r\n    log('warn', WARN_COLOR, 'warn', stuff, ...otherThings)\r\n  } \r\n  static info(stuff, ...otherThings) {\r\n    log('log', INFO_COLOR, 'info', stuff, ...otherThings)\r\n  } \r\n  static ready(stuff, ...otherThings) {\r\n    log('log', INFO_COLOR, 'ready', stuff, ...otherThings)\r\n  } \r\n  static start(stuff, ...otherThings) {\r\n    log('log', '#35c450', 'start', stuff, ...otherThings)\r\n  } \r\n  static err(stuff, ...otherThings) {\r\n    log('error', ERR_COLOR, 'error', stuff, ...otherThings)\r\n  } \r\n  static fatal(stuff, ...otherThings) {\r\n    log('error', ERR_COLOR, 'fatal', stuff, ...otherThings)\r\n  } \r\n}\r\n\r\nexport default logdown","<script>\r\n  import logdown from \"../utils/logdown.js\"\r\n  import { createEventDispatcher } from \"svelte\"\r\n\r\n  const dispatch = createEventDispatcher()\r\n\r\n  const MAXINUM_TEXT_INPUT_ROWS = 20\r\n  /**@param {Event} event */\r\n  function autoResize (event) {\r\n    const input = /**@type {HTMLTextAreaElement}*/(event.target)\r\n    if (input.scrollHeight > MAXINUM_TEXT_INPUT_ROWS * 15) {\r\n      return logdown.warn('maxinum rows exceeded')\r\n    }\r\n\r\n    resetInput(input)\r\n    input.style.height = input.scrollHeight + 'px'\r\n  }\r\n\r\n  /**@param {HTMLTextAreaElement} input */\r\n  function resetInput (input) {\r\n    input.style.height = ''\r\n  }\r\n\r\n  /**@param {KeyboardEvent} keyboardEv */\r\n  function onTyping (keyboardEv) {\r\n    if (keyboardEv.shiftKey && keyboardEv.key === 'Enter') return\r\n    if (keyboardEv.key !== 'Enter') return \r\n    keyboardEv.preventDefault()\r\n    const input = /**@type {HTMLTextAreaElement}*/(keyboardEv.target),\r\n      messageInTextInput = input.value,\r\n      messageContent = messageInTextInput.trim()\r\n    if (\r\n      messageContent == '' ||\r\n      messageInTextInput == '> ' \r\n    ) return logdown.warn('message is empty')\r\n    input.value = ''\r\n    input.focus()\r\n    resetInput(input)\r\n\r\n    dispatch('sending_message', messageContent)\r\n  }\r\n</script>\r\n\r\n<textarea class=\"no-bg no-outline\" rows=\"1\" placeholder=\"Say something :)\" on:input={autoResize} on:keypress={onTyping}></textarea>\r\n\r\n<style>\r\n  textarea {\r\n    color: white;\r\n    width: 100%;\r\n    padding: 0 0 0 5px;\r\n    resize: none;\r\n    background: transparent !important;\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n  }\r\n</style>","<script>\r\n  const iconNames = ['icon-reply']\r\n</script>\r\n\r\n<div class=\"edit-message-container\">\r\n  <div class=\"edit-message-icons\">\r\n    {#each iconNames as icon}\r\n      <div class=\"this-is edit-button bro\" aria-label=\"button\">\r\n        <div class=\"icon {icon}\"></div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>","<script>\r\n  import { onMount } from \"svelte\";\r\n  import MessageEdit from \"./MessageEdit.svelte\";\r\n\r\n  /**@type {IMessageProps} */\r\n  export let message\r\n  /**@type {HTMLParagraphElement} */\r\n  let messageContent\r\n  onMount(() => {\r\n    messageContent.innerHTML = message.content\r\n  })\r\n</script>\r\n\r\n<div class=\"message last-message\" message-id=\"{message.messageId}\" user-id=\"{message.author.id}\">\r\n  {#if message.replyTo}\r\n    <div class=\"message-reply\">\r\n      <div class=\"author icon\"></div>\r\n      <div class=\"author-name\">{message.replyTo.author.name}</div>\r\n      <div class=\"content\">{message.replyTo.content}</div>\r\n    </div>\r\n  {/if}\r\n  <div class=\"message-content-container\">\r\n    <div>\r\n      <div class=\"author icon\"></div>\r\n    </div>\r\n    <div class=\"warpper\">\r\n      <div class=\"author-name\">{message.author.name}</div>\r\n      <div class=\"content\">\r\n        <p bind:this={messageContent}></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <MessageEdit />\r\n</div>","<script>\r\n  import { onMount } from \"svelte\";\r\n  import MessageEdit from \"./MessageEdit.svelte\";\r\n\r\n  /**@type {IMessageProps} */\r\n  export let message\r\n  /**@type {HTMLParagraphElement} */\r\n  let messageContent\r\n  onMount(() => {\r\n    messageContent.innerHTML = message.content\r\n  })\r\n</script>\r\n\r\n<div class=\"message follow-up last-message\" message-id=\"{message.messageId}\" user-id=\"{message.author.id}\">\r\n  <div class=\"content\">\r\n    <p bind:this={messageContent}></p>\r\n  </div>\r\n  <MessageEdit />\r\n</div>","import logdown from \"../../src/utils/logdown.js\"\r\nimport MarkdownParser from \"./MarkdownParser.js\"\r\nimport Message from \"./Message.svelte\"\r\nimport MessageFollowUp from \"./MessageFollowUp.svelte\"\r\n/**@type {Map<string, IMessageProps>} */\r\nconst messageCache = new Map()\r\nconst markdownParser = new MarkdownParser()\r\n/**\r\n * @param {IMessageProps} message\r\n */\r\nexport function createNewMessage(message) {\r\n  let renderedMessage = sanitizeMessage(message.content)\r\n  renderedMessage = processMessage(renderedMessage)\r\n\r\n  console.log('render message content is:', renderedMessage);\r\n\r\n  const lastMessage = Array.from(messageCache.values()).pop()\r\n  const mountingPoint = u('.chat-content').nodes[0]\r\n  console.log('last message in cache:', lastMessage, ', message data', message)\r\n  \r\n  if (lastMessage?.author.id == message.author.id && !message.replyTo) {\r\n    new MessageFollowUp({\r\n      target: mountingPoint,\r\n      props: { message: { ...message, content: renderedMessage } }\r\n    })\r\n  }\r\n  else {\r\n    new Message({\r\n      target: mountingPoint,\r\n      props: { message: { ...message, content: renderedMessage } }\r\n    })\r\n  }\r\n\r\n  messageCache.set(message.messageId, message)\r\n}\r\n\r\nfunction sanitizeMessage(messageContent = '') {\r\n  return messageContent.replace(/<|>/gm, (it) => {\r\n    if (!it) return ''\r\n    const theThing = it\r\n      .replaceAll('>', '&gt;')\r\n      .replaceAll('<', '&lt;')\r\n    return `<span>${theThing}</span>`\r\n  }).replaceAll('&', '<span>&amp;</span>')\r\n}\r\n\r\n/**\r\n * @param {string} messageContent\r\n */\r\nfunction processMessage(messageContent) {\r\n  const isHasLink = /(http|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])/gm\r\n  messageContent = messageContent.replace(isHasLink, (link) => /*html*/`\r\n    <a href=\"${link}\" target=\"_blank\">${link}</a>\r\n  `)\r\n  return newLinesToBreakSpaces(markdownParser.parse(messageContent))\r\n}\r\n\r\nfunction newLinesToBreakSpaces(messageContent = '') {\r\n  return messageContent.replace(/\\n/gm, it => `<div>${it}</div>`)\r\n}\r\n\r\n/**\r\n * @param {string} messageId\r\n * @returns {IMessageProps}\r\n */\r\nexport function getMessageFromId(messageId) {\r\n  const message = messageCache.get(messageId)\r\n  if (!message) logdown.warn(`message \"${messageId}\" does not exist`)\r\n  return message\r\n}","export default class {\r\n  /**\r\n   * @param {string} text\r\n   */\r\n  parse(text) {\r\n    text = text\r\n    .replace(/__(.*)__/gim, /*html*/`<b>$1</b>`)\r\n    .replace(/\\*\\*(.*)\\*\\*/gim, /*html*/`<b>$1</b>`)\r\n    .replace(/\\*(.*)\\*|_(.*)_/gim, /*html*/`<i>$1</i>`)\r\n    .replace(/~~(.*)~~/gim, /*html*/`<s>$1</s>`)\r\n    // code block\r\n    .replace(/^```([\\s\\S]*?)```$/gm, /*html*/`<pre class=\"code-block\">$1</pre>`)\r\n    .replace(/^```(?:js|javascript|)\\n([\\s\\S]*?)```$/gm, /*html*/`<pre class=\"code-block\">$1</pre>`)\r\n    // inline code block\r\n    .replace(/`(.*)`/g, /*html*/`<pre class=\"inline-code\">$1</pre>`)\r\n\r\n    .replace(/^>(?:(.+)| )$/gm, /*html*/'<blockquote>$1</blockquote>')\r\n    // headings\r\n    .replace(/^([\\#]{6}) (.+)/gm, /*html*/`<h6>$2</h6>`)\r\n    .replace(/^([\\#]{5}) (.+)/gm, /*html*/`<h5>$2</h5>`)\r\n    .replace(/^([\\#]{4}) (.+)/gm, /*html*/`<h4>$2</h4>`)\r\n    .replace(/^([\\#]{3}) (.+)/gm, /*html*/`<h3>$2</h3>`)\r\n    .replace(/^([\\#]{2}) (.+)/gm, /*html*/`<h2>$2</h2>`)\r\n    .replace(/^([\\#]{1}) (.+)/gm, /*html*/`<h1>$2</h1>`)\r\n    //ul\r\n    .replace(/^\\s*\\n\\*/gm, '<ul>\\n*')\r\n    .replace(/^(\\*.+)\\s*\\n([^\\*])/gm, '$1\\n</ul>\\n\\n$2')\r\n    .replace(/^\\*(.+)/gm, '<li>$1</li>')\r\n    //ol\r\n    .replace(/^\\s*\\n\\d\\./gm, '<ol>\\n1.')\r\n    .replace(/^(\\d\\..+)\\s*\\n([^\\d\\.])/gm, '$1\\n</ol>\\n\\n$2')\r\n    .replace(/^\\d\\.(.+)/gm, '<li>$1</li>')\r\n\r\n    return text\r\n  }\r\n}","<script>\r\n  import { makeid } from \"../utils/utils\";\r\n  import ChatMessageInput from \"./ChatMessageInput.svelte\"\r\n  import ReplyToAuthor from \"./ReplyToAuthor.svelte\";\r\n  import { createNewMessage } from \"./messageUtils\";\r\n  // let showReplyAuthor = false\r\n\r\n  function sendingMessage(messageContent) {\r\n    if (window.__app__.mode == 'production') {\r\n      return socket.emit('message', messageContent)\r\n    }\r\n\r\n    createNewMessage({\r\n      author: {\r\n        iconUrl: '',\r\n        id: sessionStorage.getItem('user_id'),\r\n        name: 'Anonymous'\r\n      },\r\n      content: messageContent.detail,\r\n      messageId: makeid(20)\r\n    })\r\n  }\r\n\r\n  if (window.__app__.mode == 'production') {\r\n    socket.on('message', (messageContent) => {\r\n      createNewMessage(messageContent)\r\n    })\r\n  }\r\n</script>\r\n\r\n<link rel=\"stylesheet\" href=\"../src/page/Message.css\">\r\n<div class=\"chat-page\">\r\n  <div class=\"chat-content\">\r\n    \r\n  </div>\r\n  <div class=\"chat-msg-input-container\">\r\n    <div>\r\n      <!-- <svelte:component this={optionSelected.component} /> -->\r\n    </div>\r\n    <div class=\"message-input\">\r\n      <div class=\"upload\">\r\n        <div class=\"icon icon-plus\"></div>\r\n      </div>\r\n      <ChatMessageInput on:sending_message={sendingMessage} />\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  :root {\r\n    --chat-message-selected-color: #434352;\r\n    --chat-message-input-color: #18171d;\r\n    --chat-scroll-bar-color: #23232c;\r\n  }\r\n\r\n  .chat-page {\r\n    height: 100%;\r\n    padding: var(--app-space) 0 0 var(--app-space) ;\r\n    position: relative;\r\n    grid-template-rows: auto 3.75rem;\r\n  }\r\n\r\n  .chat-content {\r\n    max-height: 82.5vh;\r\n    padding-top: 1rem;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    background: var(--chat-scroll-bar-color);\r\n    border-radius: 5px;\r\n    width: 13px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    width: 5px;\r\n    background: var(--app-sidebar-color);\r\n  }\r\n\r\n  .chat-msg-input-container {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  .chat-msg-input-container .message-input {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n    background: var(--chat-message-input-color);\r\n    margin-bottom: 10px;\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .chat-msg-input-container .upload {\r\n    padding: 5px;\r\n  }\r\n</style>","import App from './App.svelte'\r\nimport logdown from './utils/logdown.js'\r\nimport { makeid } from './utils/utils.js'\r\n\r\nlogdown.start(`Starting this app... (v1.0.0 dev-build 5)\r\n  .        ／＞　 フ\r\n          | 　_　_| \r\n        ／\\` ミ__^ノ \r\n       /　　　　 |\r\n      /　 ヽ　　 ﾉ              ╱|、\r\n     /　　 |　|　|            (˚ˎ 。7  \r\n    ／￣|　　 |　|　|          |、˜〵          \r\n    (￣ヽ＿_  ヽ_)__)         じしˍ,)ノ\r\n    ＼二)\r\n`)\r\nlogdown.info('hello from space.JS! v1.0')\r\nconst currentPage = location.pathname.split('/').pop().replace('.html', '')\r\n\r\nsessionStorage.setItem('user_id', `user-${makeid(10)}`)\r\nconst app = new App({\r\n\ttarget: document.querySelector('.app-mount'),\r\n});\r\n\r\nconsole.log('user id:', sessionStorage.getItem('user_id'))\r\nlogdown.info(`you\\'re currently on \"${currentPage}\" page`)\r\n\r\nlogdown.success('app mounted')\r\n\r\nexport default app"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","update_promise","binding_callbacks","render_callbacks","flush_callbacks","add_binding_callback","add_render_callback","flush","seen_callbacks","Set","length","shift","update","callback","pop","has","add","fragment","dirty","before_render","p","ctx","after_render","mount_component","on_destroy","m","new_on_destroy","map","filter","make_dirty","key","Promise","resolve","then","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","Map","ready","hydrate","l","Array","from","childNodes","children","c","intro","i","SvelteComponent","$destroy","detaching","this","d","$on","index","indexOf","splice","$set","makeid","result","characters","counter","charAt","Math","floor","random","log","labelColor","label","content","stuff","console","INFO_COLOR","ERR_COLOR","logdown","success","otherThings","warn","info","start","err","fatal","autoResize","onTyping","MAXINUM_TEXT_INPUT_ROWS","input","scrollHeight","resetInput","style","height","dispatch","keyboardEv","shiftKey","preventDefault","messageInTextInput","messageContent","trim","focus","icon","iconNames","iterations","message","replyTo","author","messageId","id","innerHTML","messageCache","markdownParser","parse","replace","createNewMessage","renderedMessage","it","replaceAll","sanitizeMessage","isHasLink","link","newLinesToBreakSpaces","processMessage","lastMessage","values","mountingPoint","u","nodes","Message","MessageFollowUp","set","sendingMessage","window","__app__","mode","socket","emit","iconUrl","sessionStorage","getItem","on","currentPage","location","pathname","split","setItem","app","querySelector"],"mappings":"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"}